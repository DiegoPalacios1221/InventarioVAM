/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import conexion.Conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
/**
 *
 * @author Admin
 */
public class FrmRegistro extends javax.swing.JFrame {

    Connection cn;
    /**
     * Creates new form FrmRegistro
     */
    public FrmRegistro() {
    initComponents();
    setResizable(false);
    setLocationRelativeTo(null);
    cn = Conexion.conectar();  // Iniciar la conexión a la base de datos
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TxtNombre = new javax.swing.JTextField();
        TxtApellido = new javax.swing.JTextField();
        TxtCC = new javax.swing.JTextField();
        TxtEmail = new javax.swing.JTextField();
        TxtUsuario = new javax.swing.JTextField();
        TxtContraseña = new javax.swing.JTextField();
        button_Regresar = new javax.swing.JButton();
        button_Registrarse = new javax.swing.JButton();
        comboTipo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Por favor complete los campos para registrarse");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Nombre");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Apellido");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("CC");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Email");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Usuario");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Contraseña");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, -1, -1));
        getContentPane().add(TxtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 90, 20));

        TxtApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtApellidoActionPerformed(evt);
            }
        });
        getContentPane().add(TxtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 100, -1));
        getContentPane().add(TxtCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 90, -1));
        getContentPane().add(TxtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 90, -1));

        TxtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(TxtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 100, 20));

        TxtContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtContraseñaActionPerformed(evt);
            }
        });
        getContentPane().add(TxtContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 90, -1));

        button_Regresar.setText("Regrasar");
        button_Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_RegresarActionPerformed(evt);
            }
        });
        getContentPane().add(button_Regresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 120, 40));

        button_Registrarse.setText("Registrarse");
        button_Registrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_RegistrarseActionPerformed(evt);
            }
        });
        getContentPane().add(button_Registrarse, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, 120, 40));

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Administrador" }));
        comboTipo.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de Usuario"));
        getContentPane().add(comboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 120, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtApellidoActionPerformed

    private void TxtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtUsuarioActionPerformed

    private void TxtContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtContraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtContraseñaActionPerformed

    private void button_RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_RegresarActionPerformed
                                                   
    this.dispose(); // Cerrar la ventana de registro
    new FrmInicio().setVisible(true); // Mostrar la ventana de inicio


    }//GEN-LAST:event_button_RegresarActionPerformed

    private void button_RegistrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_RegistrarseActionPerformed
        String nombre = TxtNombre.getText();
        String apellido = TxtApellido.getText();
        String ccStr = TxtCC.getText().trim();
        String email = TxtEmail.getText();
        String usuario = TxtUsuario.getText();
        String contraseña = TxtContraseña.getText();
        String tipousuario = comboTipo.getSelectedItem().toString();
        String tipoUsuario = "Administrador";
        int idTipoUsuario = 0; // Variable para almacenar el ID numérico
        
        if (nombre.isEmpty() || apellido.isEmpty() || email.isEmpty() || usuario.isEmpty() || contraseña.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe completar los datos");
        } else {
            if (tipousuario.equalsIgnoreCase("Seleccionar")) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de usuario");
            } else {
                try {
                    // Validar CC como entero
                    int cc = 0;
                    try {
                  
                        cc = Integer.parseInt(ccStr);
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Debe ingresar un número válido para CC");
                        return;
                    }
                    
                     // Verificar si la cédula ya está registrada
                    if (verificarCCExistente(cc)) {
                    JOptionPane.showMessageDialog(null, "La cédula ya está registrada.");
                    return; 
                    }
                    
                    if (tipoUsuario.equalsIgnoreCase("Administrador")) {
                        idTipoUsuario = 1; 
                    
                    } else {
                        JOptionPane.showMessageDialog(null, "Tipo de usuario no válido");
                        return; 
                    }
                    
                    
                    String consulta = "INSERT INTO usuario (nombre, apellido, cc, email, usuario, contraseña, tipo_usuario_id_tipo_usuario) "
                            + "VALUES (?, ?, ?, ?, ?, ?, ?)";
                        PreparedStatement ps = cn.prepareStatement(consulta);
                        ps.setString(1, nombre);
                        ps.setString(2, apellido);
                        ps.setInt(3, cc);
                        ps.setString(4, email);
                        ps.setString(5, usuario);
                        ps.setString(6, contraseña);
                        ps.setInt(7, idTipoUsuario);
                        ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Datos guardados correctamente");
                    this.dispose(); // Cerrar la ventana de registro
                    new FrmInicio().setVisible(true); // Mostrar la ventana de inicio
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "No se pudo guardar usuario" + e);

                }
            }
        }
    }//GEN-LAST:event_button_RegistrarseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
                
            
        }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtApellido;
    private javax.swing.JTextField TxtCC;
    private javax.swing.JTextField TxtContraseña;
    private javax.swing.JTextField TxtEmail;
    private javax.swing.JTextField TxtNombre;
    private javax.swing.JTextField TxtUsuario;
    private javax.swing.JButton button_Registrarse;
    private javax.swing.JButton button_Regresar;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables

public boolean verificarCCExistente(int cc) {
    boolean existe = false;
    String sql = "SELECT * FROM usuario WHERE cc = ?";
    
    try (Connection cn = Conexion.conectar(); 
         PreparedStatement pst = cn.prepareStatement(sql)) {
        pst.setInt(1, cc);
        System.out.println("Ejecutando la consulta SQL: " + sql + " con cédula: " + cc);  // Depuración
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            existe = true;
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al verificar la cédula: " + e.getMessage());
    }
    
    return existe;
}

    
}

